<script>                ::= <simple command> | <pipeline> | <logical expression>

<simple-command>        ::= "'"?<word>"'"? { "'"?<word>"'"? }? | '"'?<word>'"'? { '"'?<word>'"'? }? | <redirection> <simple-command>? | <simple-command> <redirection>

<pipeline>              ::= <simple-command> | <simple-command> '|' <pipeline>

<logical-expression>    ::= <script> <logical-expression> <script>

<redirection>           ::= '<' "'"?<word>"'"? | '<' '"'?<word>'"'? | '>' "'"?<word>"'"? | '>' '"'?<word>'"'? | '2>' "'"?<word>"'"? | '2>' '"'?<word>'"'?

<word>                  ::= (?(STRING))? | (?<variable>)?

<variable>              ::= '$'(STRING) // 규칙 추가.

<logical-symbol>        ::= '&&' | '||'


<script>: raw shell script (line)
<command>: simple command or pipeline
<simple-command>: 단어 한 개 이상. 따옴표로 묶여있을 수도 있음.(따옴표가 허용된다는 뜻)(따옴표로 묶여있다면 단어라는 뜻)
<pipeline>: 파이프 기호로 구분된 명령어들.
<redirection>: 리다이렉션 기호 뒤 또는 앞에 단어가 있어야 함.
<word>: 그냥 문자열 또는 변수.
<variable>: 문자열 앞에 달러 기호가 있어야 함.
<logical expression>: <logical-symbol>이 맨 앞에 오지 못하도록 강제.

(할당 연산자 어떻게 함)
	(실행부에서 함)

(확장은 파싱 때 함)

(따옴표 <word>로)

ls -l | cat -e && ls
<logical-expression>
<script> <logical-symbol> <script>
<pipeline> <logical-symbol> <script>
<simple-command> | <pipeline> <logical-symbol> <script>
<simple-command> | <simple-command> <logical-symbol> <script>
<word> <word> | <word> <word> <logical-symbol> <script>
<word> <word> | <word> <word> <logical-symbol> <simple-command>
<word> <word> | <word> <word> <logical-symbol> <word>
ls -l | cat -e && ls


ls -l && (cat file || mkdir dir)
<script>
<logical-expression>
<script> <logical-symbol> <script>
<simple-command> <logical-symbol> <script>
<word> <word> <logical-symbol> <script>
ls <word> <logical-symbol> <script>
ls -l <logical-symbol> <script>
ls -l && <script>
ls -l && <logical-expression>
ls -l && <script> <logical-symbol> <script>
ls -l && <simple-command> <logical-symbol> <script>
ls -l && <word> <word> <logical-symbol> <script>
ls -l && (cat <word> <logical-symbol> <script>
ls -l && (cat file <logical-symbol> <script>
ls -l && (cat file || <script>
ls -l && (cat file || <simple-command>
ls -l && (cat file || <word> <word>
ls -l && (cat file || mkdir <word>
ls -l && (cat file || mkdir dir)
// 괄호 어케함;;


&& (cat file || mkdir dir)
<script>
<logical-expression>
?? <logical-symbol> <script>
--> fail.
